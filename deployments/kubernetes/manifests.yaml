apiVersion: v1
kind: Namespace
metadata:
  name: ktrlplane
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ktrlplane-config
  namespace: ktrlplane
data:
  config.yaml: |
    database:
      host: postgres-service
      port: 5432
      name: ktrlplane_db
      user: ktrlplane
      password: password
    auth0:
      domain: your-auth0-domain
      audience: your-auth0-audience
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ktrlplane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          value: ktrlplane_db
        - name: POSTGRES_USER
          value: ktrlplane
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: ktrlplane
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: ktrlplane
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ktrlplane-backend
  namespace: ktrlplane
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ktrlplane-backend
  template:
    metadata:
      labels:
        app: ktrlplane-backend
    spec:
      containers:
      - name: backend
        image: ktrlplane/backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: postgres-service
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: ktrlplane_db
        - name: DB_USER
          value: ktrlplane
        - name: DB_PASSWORD
          value: password
        volumeMounts:
        - name: config
          mountPath: /root/config.yaml
          subPath: config.yaml
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: ktrlplane-config
---
apiVersion: v1
kind: Service
metadata:
  name: ktrlplane-backend-service
  namespace: ktrlplane
spec:
  selector:
    app: ktrlplane-backend
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ktrlplane-frontend
  namespace: ktrlplane
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ktrlplane-frontend
  template:
    metadata:
      labels:
        app: ktrlplane-frontend
    spec:
      containers:
      - name: frontend
        image: ktrlplane/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ktrlplane-frontend-service
  namespace: ktrlplane
spec:
  selector:
    app: ktrlplane-frontend
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ktrlplane-ingress
  namespace: ktrlplane
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: ktrlplane.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ktrlplane-backend-service
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ktrlplane-frontend-service
            port:
              number: 80

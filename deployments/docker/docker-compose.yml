version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ktrlplane_db
      POSTGRES_USER: ktrlplane
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ktrlplane"]
      interval: 10s
      timeout: 5s
      retries: 5

  ktrlplane-backend:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      KTRLPLANE_DB_HOST: postgres
      KTRLPLANE_DB_PORT: 5432
      KTRLPLANE_DB_NAME: ktrlplane_db
      KTRLPLANE_DB_USER: ktrlplane
      KTRLPLANE_DB_PASSWORD: password
      KTRLPLANE_DB_SSL_MODE: disable
      KTRLPLANE_AUTH0_DOMAIN: auth.konnektr.io
      KTRLPLANE_AUTH0_AUDIENCE: https://api.ktrlplane.example.io
      KTRLPLANE_AUTH0_CLIENT_ID: client_id
      KTRLPLANE_SERVER_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  ktrlplane-frontend:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - ktrlplane-backend
    restart: unless-stopped

volumes:
  postgres_data:
